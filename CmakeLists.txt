cmake_minimum_required(VERSION 3.18.2)

project("AEVE_Plugins")

# Enable C++20 standard
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# -------------------- Platform-specific configuration --------------------

# macOS/Xcode specific settings
if(CMAKE_GENERATOR STREQUAL "Xcode")
  set(CMAKE_OSX_DEPLOYMENT_TARGET "11.0")
  set(CMAKE_OSX_ARCHITECTURES "arm64;x86_64")
  set(MAC_PLATFORM TRUE)
endif()

# Windows/Visual Studio specific settings
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
  add_definitions(-D_CRT_SECURE_NO_WARNINGS)
  add_compile_options(/utf-8)
  set(WIN_PLATFORM TRUE)
endif()

# -------------------- After Effects SDK configuration --------------------

set(AE_SDK_PATH "./AfterEffectsSDK")
get_filename_component(AE_SDK_PATH_ABS "${CMAKE_CURRENT_SOURCE_DIR}/${AE_SDK_PATH}" ABSOLUTE)

add_subdirectory("AfterEffectsSDK")

# -------------------- Plugin configuration --------------------

# Set the output directory for plugins
set(PLUGIN_OUTPUT_DIR ${CMAKE_BINARY_DIR}/Plugins)
file(MAKE_DIRECTORY ${PLUGIN_OUTPUT_DIR}) # Create the output directory if it doesn't exist

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PLUGIN_OUTPUT_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PLUGIN_OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PLUGIN_OUTPUT_DIR})

# Add common library for all plugins
add_subdirectory("FsLibrary")

# ---------------- Plugin build function --------------------

function(build_ae_plugin PLUGIN_NAME)
  # Bundle identifier and copyright variable definitions
  set(MY_BUNDLE_GUI_IDENTIFIER "io.github.hashory.AEVE-Plugins.${PLUGIN_NAME}")
  string(TIMESTAMP BUILD_YEAR "%Y")
  set(MY_BUNDLE_COPYRIGHT "MIT LICENSED ${BUILD_YEAR}.")

  # PiPL resource filenames
  set(PIPL_RSRC ${PLUGIN_NAME}PiPL.rsrc)
  set(PIPL_R ${PLUGIN_NAME}PiPL.r)

  add_library(${PLUGIN_NAME} MODULE ${${PLUGIN_NAME}_SOURCES})

  # Link the library
  target_link_libraries(${PLUGIN_NAME} PRIVATE AfterEffectsSDK)
  target_link_libraries(${PLUGIN_NAME} PRIVATE FsLibrary)

  # -------------------- Platform-specific build logic --------------------

  # Xcode(macOS) logic
  if(MAC_PLATFORM)
    target_link_libraries(${PLUGIN_NAME} "-framework Cocoa")

    set_target_properties(${PLUGIN_NAME} PROPERTIES
      XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
    )

    find_program(AFX_REZ rez /Developer/Tools)

    add_custom_command(
      OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${PIPL_RSRC}
      COMMAND ${AFX_REZ}
      ARGS ${CMAKE_CURRENT_SOURCE_DIR}/${PIPL_R}
        -o ${CMAKE_CURRENT_BINARY_DIR}/${PIPL_RSRC}
        -useDF
        -i "${AE_SDK_PATH_ABS}/Headers"
        -i "${AE_SDK_PATH_ABS}/Headers/SP"
        -i "${AE_SDK_PATH_ABS}/Util"
        -i "${AE_SDK_PATH_ABS}/Resources"
        -D __MACH__
    )

    set_source_files_properties(
      ${CMAKE_CURRENT_BINARY_DIR}/${PIPL_RSRC}
      PROPERTIES
      MACOSX_PACKAGE_LOCATION Resources/
    )

    target_sources(${PLUGIN_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/${PIPL_RSRC})

    set_target_properties(${PLUGIN_NAME} PROPERTIES PREFIX "")
    set_target_properties(${PLUGIN_NAME} PROPERTIES SUFFIX "")
    set_target_properties(${PLUGIN_NAME} PROPERTIES
      BUNDLE True
      MACOSX_BUNDLE_BUNDLE_NAME ${PLUGIN_NAME}
      BUNDLE_EXTENSION "plugin"
      MACOSX_BUNDLE_INFO_STRING "${PLUGIN_NAME}"
      MACOSX_BUNDLE_GUI_IDENTIFIER "${MY_BUNDLE_GUI_IDENTIFIER}"
      MACOSX_BUNDLE_COPYRIGHT "${MY_BUNDLE_COPYRIGHT}"
    )

    # PkgInfo
    add_custom_command(
      OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/PkgInfo
      COMMAND echo "eFKTFXTC" >> ${CMAKE_CURRENT_BINARY_DIR}/PkgInfo
    )

    set_source_files_properties(
      ${CMAKE_CURRENT_BINARY_DIR}/PkgInfo
      PROPERTIES
      MACOSX_PACKAGE_LOCATION ""
    )

    target_sources(${PLUGIN_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/PkgInfo)
  endif()

  # Windows logic
  if(WIN_PLATFORM)
    set_target_properties(${PLUGIN_NAME} PROPERTIES SUFFIX ".aex")
    get_filename_component(
      AFX_REZ
      "${AE_SDK_PATH_ABS}/Resources/PiPLtool.exe"
      ABSOLUTE
      CACHE
    )

    set(RR_FILE "${CMAKE_CURRENT_BINARY_DIR}/${PLUGIN_NAME}.rr")
    set(RRC_FILE "${CMAKE_CURRENT_BINARY_DIR}/${PLUGIN_NAME}.rrc")
    set(RC_FILE "${CMAKE_CURRENT_BINARY_DIR}/${PLUGIN_NAME}.rc")

    add_custom_command(
      OUTPUT ${RR_FILE}
      COMMAND
      cl /utf-8
        /I "${AE_SDK_PATH_ABS}/Headers"
        /I "${AE_SDK_PATH_ABS}/Headers/SP"
        /I "${AE_SDK_PATH_ABS}/Util"
        /I "${AE_SDK_PATH_ABS}/Resources"
        /EP "${CMAKE_CURRENT_SOURCE_DIR}/${PIPL_R}" > "${RR_FILE}"
    )

    add_custom_command(
      DEPENDS ${RR_FILE}
      OUTPUT ${RRC_FILE}
      COMMAND ${AFX_REZ} "${RR_FILE}" "${RRC_FILE}"
    )

    add_custom_command(
      DEPENDS ${RRC_FILE}
      OUTPUT ${RC_FILE}
      COMMAND cl /utf-8 /D "MSWindows" /EP "${RRC_FILE}" > "${RC_FILE}"
    )

    target_sources(
      ${PLUGIN_NAME} PRIVATE
      "${RC_FILE}"
    )
  endif()
endfunction()

# ---------------- Plugin source files --------------------

# Add each plugin project as a subdirectory
add_subdirectory("AlphaFix")
add_subdirectory("AlphaThreshold")
